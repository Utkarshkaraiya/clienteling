import { OrderProductPromoCodes } from './order.product.promo.codes';
import { OrderContactMech } from './order.contact.mech';
import { OrderAdjustments } from './order.adjustments';
import { OrderItemAttributes } from './order.item.attributes';
import { WorkEffort } from './work.effort';
import { OrderNotes } from './order.notes';
import { OrderPaymentInfo } from './order.payment.info';
import { OrderItemContactMechs } from './order.item.contact.mechs';
import { OrderInternalNotes } from './order.internal.notes';
import { AdditionalPartyRoleMap } from './additional.party.role.map';
import { OrderAttributes } from './order.attributes';
import { OrderItemPriceInfo } from './order.item.price.info';
import { OrderItemGroups } from './order.item.groups';
import { CustomerDetail } from './customer.detail';
import { ShoppingCartItem } from './shopping.cart.item';

export interface ShoppingCart {
  workEffortId: string;
  miscellaneousCharges: string;
  salesChannelEnumId: string;
  billToCustomerPartyId: string;
  billingAccountId: string;
  orderAdjustments: OrderAdjustments[];
  orderItemContactMechs: OrderItemContactMechs[];
  cartTotal: number;
  orderProductPromoCodes: OrderProductPromoCodes[];
  orderInternalNotes: OrderInternalNotes[];
  workEfforts: WorkEffort[];
  itemDesiredDeliveryDate: string;
  partyId: string;
  autoCloseDate: string;
  allTaxesByType: any;
  billFromVendorPartyId: string;
  grandTotal: number;
  shippingInstructions: any;
  autoOrderShoppingListId: any;
  endUserCustomerPartyId: string;
  orderTerms: any;
  transactionId: string;
  placingCustomerPartyId: string;
  currencyUom: string;
  orderNotes: OrderNotes[];
  orderPartyId: string;
  additionalPartyRoleMap: AdditionalPartyRoleMap;
  orderDate: string;
  items: ShoppingCartItem[];
  orderItemAttributes: OrderItemAttributes[];
  shippingApplies: true;
  orderItemGroups: OrderItemGroups[];
  orderAttributes: OrderAttributes[];
  //TODO: It should be specified
  orderProductPromoUses: any;
  orderTypeId: string;
  terminalId: string;
  orderOtherAdjustmentTotal: string;
  orderItemShipGroupInfo: any;
  orderContactMechs: OrderContactMech;
  productStoreId: string;
  totalShipping: string;
  orderPaymentInfo: OrderPaymentInfo[];
  contactPersonCustomerPartyId: string;
  orderName: string;
  webSiteId: string;
  prodCatalogId: string;
  totalSalesTax: string;
  shipGroupFacilityId: string;
  maySplit: string;
  externalId: string;
  correspondingPoId: string;
  firstAttemptOrderId: string;
  originFacilityId: string;
  orderItemPriceInfos: OrderItemPriceInfo[];
  shipToCustomerPartyId: string;
  supplierPartyId: string;
  productStore: any;
  internalCode: string;
  customer: CustomerDetail;
  orderItemShipGroupAssoc: any[];
  address: any[];
  isModified: boolean;
  orderId: string;
}
